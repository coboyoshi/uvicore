#!/usr/bin/env bash

# Uvicore Installer
# mReschke 2020-10-10

# Command line options
path="$1"
branch="$2"
repo="$3"


# Bash colors and output functions
DEFAULT="\033[0;0m"; BLUE="\033[0;34m"; GREEN="\033[0;32m"; CYAN="\033[0;36m"
RED="\033[0;31m"; PURPLE="\033[0;35m"; BROWN="\033[0;33m"; LIGHTGRAY="\033[0;37m"
DARKGRAY="\033[1;30m"; LIGHTBLUE="\033[1;34m"; LIGHTGREEN="\033[1;32m"
LIGHTCYAN="\033[1;36m"; LIGHTRED="\033[1;31m"; LIGHTPURPLE="\033[1;35m"
YELLOW="\033[1;33m"; WHITE="\033[1;37m"
function header() { echo -e "${BROWN}:: ${GREEN}$1 ${BROWN}::${DEFAULT}"; }
function log() { echo -e "$1"; }
function info() { echo -e "${WHITE}$1${DEFAULT}"; }
function line() { echo -e "${GREEN}--------------------------------------------------------------------------------${DEFAULT}"; }
function item() { echo -e "  ${BLUE}* ${DARKGRAY}$1${DEFAULT}"; }
function message() { echo -e "${BLUE}MESSAGE: ${WHITE}$1${DEFAULT}"; }
function notice() { echo -e "${PURPLE}NOTICE: ${WHITE}$1${DEFAULT}"; }
function warning() { echo -e "${YELLOW}WARNING: ${WHITE}$1${DEFAULT}"; }
function error() { echo -e "${LIGHTRED}ERROR: ${RED}$1${DEFAULT}"; }

# Usage docs
function usage() {
    cat << EOF
Uvicore Application Installer
The Async Python Framework for Artisans.
An Elegant Fullstack Python Web, API and CLI Framework

  Usage: uvicore-new-app path [branch] [gitrepo]

  You can optionally pass your own git branch and repository URL.

  Examples: Use uvicore default appstub repo on master branch
    uvicore-new-app ./wiki

  Example: Use uvicore default appstub repo on 3.0 branch
    uvicore-new-app ./wiki 3.0

  Example: Use your own appstub repo on master branch
    uvicore-new-app ./wiki master https://github.com/mystuff/custom-uvicore-appstub
EOF
}

# Ensure dependencies are installed
function check_dependencies() {
    # python
    pass=1
    if ! command -v python > /dev/null; then pass=0; fi
    if ! command -v git > /dev/null; then pass=0; fi
    if [ $pass -eq 0 ]; then
        echo
        echo "Uvicore install required git and python to be installed."
        echo "Please install the required dependencies on your system and try again."
        exit 1
    fi
}

# Install uvicore
function install() {
    echo; header "Installing Uvicore Package Schema $branch $repo into $path"; line

    if [ -d "$path" ]; then
       error "Directory $path already exists.  Probably not what you wanted."
       error "Install failed. Exiting."
       exit 1
    fi

    item "Creating directory $path"
    mkdir -p $path

    item "Cloning $repo $branch branch into $path"
    git clone --depth 1 $repo -b $branch $path

    installer="$path/.install/install.py"
    if [ -f "$installer" ]; then
        item "Running the python installer script $installer"; echo
        python $installer
    else
        echo "Installer $installer not found."
        echo "Install failed. Exiting."
        exit 1
    fi
}

# Main
check_dependencies
if [ "$path" == "" ] || [ "$path" == "--help" ] || [ "$path" == "-h" ] || [ "$path" == "--version" ] || [ "$path" == "-v" ]; then
    usage
else
    if [ "$branch" == "" ]; then branch="master"; fi
    if [ "$repo" == "" ]; then repo="https://github.com/uvicore/app"; fi

    header "Uvicore Installer"; echo

    info "Actions:"
    item "You are about to create a new directory $path"
    item "You are about to clone $branch branch from $repo into $path"
    item "Once cloned, the $path/.install/install.py python script will be executed to ask install questions"
    echo
    warning ""
    info "Please ensure you TRUST the repository you are cloning if 3rd party!"
    info "Please ensure you have read the repositories .install/install.py file if unsure!"
    echo

    echo -n "Continue to clone and execute $path/.install/install.py (y/N)? "; read answer
    if [ "$answer" != "${answer#[Yy]}" ] ;then
        install
    else
        echo
        error "Install Cancelled.  Please try uvicore later!  Bye."
    fi
fi
